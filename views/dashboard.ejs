<!DOCTYPE html>
<html>
<head>
  <title>MySearch Hub - Dashboard</title>
  <link rel="stylesheet" href="/style.css">
  <link rel="icon" type="image/x-icon" href="/favicon.ico">
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&family=Orbitron:wght@400;700&display=swap" rel="stylesheet">
  <style>
    /* Add loading overlay styles */
    .loading-overlay {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.5);
      z-index: 1000;
      justify-content: center;
      align-items: center;
    }
    .loading-spinner {
      border: 4px solid #f3f3f3;
      border-top: 4px solid #3498db;
      border-radius: 50%;
      width: 40px;
      height: 40px;
      animation: spin 1s linear infinite;
    }
    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }
    .search-form.disabled {
      opacity: 0.5;
      pointer-events: none;
    }

    /* Truncate long definitions */
    .definition {
      max-height: 3em;
      overflow: hidden;
      position: relative;
      transition: max-height 0.3s ease;
    }
    .definition.expanded {
      max-height: none;
    }
    .read-more {
      color: #3498db;
      cursor: pointer;
      display: none;
    }
    .definition.long ~ .read-more {
      display: inline;
    }

    /* Style for placeholder message */
    .no-info-message {
      color: #888;
      font-style: italic;
    }

    /* Debug section */
    .debug-section {
      display: none;
      margin-top: 20px;
      padding: 10px;
      background: #f0f0f0;
      border-radius: 5px;
    }
    .debug-section.show {
      display: block;
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="welcome-header">
      <h1>Welcome, <span class="username"><%= user.displayName %></span>!</h1>
      <a href="/logout" class="button">Log Out</a>
    </div>

    <form action="/dashboard" method="POST" class="search-form" id="searchForm">
      <label for="query">Topic Query:</label>
      <input type="text" id="query" name="query" placeholder="Enter a topic (e.g., Artificial Intelligence)..." required>
      <label for="title">Topic Title:</label>
      <input type="text" id="title" name="title" placeholder="Enter a title..." required>
      <button type="submit" id="searchButton">Add Topic</button>
    </form>

    <div class="clear-form">
      <form action="/clear-searches" method="POST">
        <button type="submit" id="deleteButton">Clear All Topics</button>
      </form>
    </div>

    <h2>Your Topics</h2>
    <% if (searches.length === 0) { %>
      <p>No topics saved yet. Add a topic above!</p>
    <% } else { %>
      <div class="search-results">
        <% searches.forEach(search => { %>
          <div class="search-result" data-id="<%= search.id %>">
            <h3><%= search.title %></h3>
            <h4>Topic: <%= search.query %></h4>
            <p class="definition <%= search.definition === 'No information found' ? 'no-info-message' : '' %> <%= search.definition.length > 150 ? 'long' : '' %>">
              <%= search.definition %>
              <% if (search.definition === 'No information found') { %>
                <span>(Try a more specific query, e.g., "Artificial Intelligence")</span>
              <% } %>
            </p>
            <span class="read-more">Read More</span>
            <div class="timestamp">
              Added on: <%= new Date(Number(search.timestamp)).toLocaleString() %>
            </div>
            <div class="button-group">
              <a href="#" class="button edit-button">Edit</a>
              <form action="/delete/<%= search.id %>" method="POST" style="display:inline;">
                <button type="submit" class="delete-button">Delete</button>
              </form>
            </div>
            <!-- Debug Info -->
            <div class="debug-info">
              <p><strong>Query:</strong> <%= search.query %></p>
              <p><strong>Definition:</strong> <%= search.definition %></p>
            </div>
          </div>
        <% }) %>
      </div>
    <% } %>

    <!-- Toast Notification -->
    <div class="toast-container">
      <% if (message) { %>
        <div class="toast <%= messageType === 'success' ? 'toast-success' : 'toast-error' %> show">
          <%= message %>
        </div>
      <% } %>
    </div>

    <!-- Loading Overlay -->
    <div class="loading-overlay" id="loadingOverlay">
      <div class="loading-spinner"></div>
    </div>

    <!-- Modal for Editing -->
    <div class="modal" id="editModal">
      <div class="modal-content">
        <span class="close">Ã—</span>
        <h2>Edit Topic</h2>
        <form id="editForm" method="POST">
          <div class="modal-input-group">
            <label for="editTitle">Topic Title:</label>
            <input type="text" id="editTitle" name="title" required>
          </div>
          <div class="modal-buttons">
            <button type="submit" class="save-button">Save</button>
            <button type="button" class="cancel-button close">Cancel</button>
          </div>
        </form>
      </div>
    </div>

    <!-- Debug Toggle -->
    <div style="margin-top: 20px;">
      <button id="toggleDebug" class="button">Toggle Debug Info</button>
    </div>
    <div class="debug-section" id="debugSection">
      <h3>Debug Information</h3>
      <p>Use this section to inspect the raw query and definition for each topic.</p>
    </div>
  </div>

  <script>
    const searchForm = document.getElementById('searchForm');
    const searchButton = document.getElementById('searchButton');
    const loadingOverlay = document.getElementById('loadingOverlay');

    // Show loading overlay when form is submitted
    searchForm.addEventListener('submit', () => {
      searchButton.classList.add('loading');
      searchForm.classList.add('disabled');
      loadingOverlay.style.display = 'flex';
    });

    // Modal for editing
    const modal = document.getElementById('editModal');
    const closeButtons = document.querySelectorAll('.close');
    const editButtons = document.querySelectorAll('.edit-button');
    const editForm = document.getElementById('editForm');

    editButtons.forEach(button => {
      button.addEventListener('click', (e) => {
        e.preventDefault();
        const searchResult = button.closest('.search-result');
        const id = searchResult.dataset.id;
        const title = searchResult.querySelector('h3').textContent;
        document.getElementById('editTitle').value = title;
        editForm.action = `/edit/${id}`;
        modal.style.display = 'block';
        setTimeout(() => {
          modal.classList.add('show');
        }, 10);
      });
    });

    closeButtons.forEach(button => {
      button.addEventListener('click', () => {
        modal.classList.remove('show');
        setTimeout(() => {
          modal.style.display = 'none';
        }, 300);
      });
    });

    window.addEventListener('click', (e) => {
      if (e.target === modal) {
        modal.classList.remove('show');
        setTimeout(() => {
          modal.style.display = 'none';
        }, 300);
      }
    });

    // Toast notification
    const toast = document.querySelector('.toast');
    if (toast) {
      setTimeout(() => {
        toast.classList.remove('show');
      }, 3000);
    }

    // Read More toggle for long definitions
    document.querySelectorAll('.read-more').forEach(button => {
      button.addEventListener('click', () => {
        const definition = button.previousElementSibling;
        definition.classList.toggle('expanded');
        button.textContent = definition.classList.contains('expanded') ? 'Read Less' : 'Read More';
      });
    });

    // Toggle debug info
    const toggleDebugButton = document.getElementById('toggleDebug');
    const debugSection = document.getElementById('debugSection');
    toggleDebugButton.addEventListener('click', () => {
      debugSection.classList.toggle('show');
      document.querySelectorAll('.debug-info').forEach(info => {
        info.style.display = debugSection.classList.contains('show') ? 'block' : 'none';
      });
    });
  </script>
</body>
</html>